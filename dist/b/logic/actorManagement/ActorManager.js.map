{"version":3,"sources":["../../../../src/logic/actorManagement/ActorManager.js"],"names":[],"mappings":";;AAAA,SAAS,YAAY,CAAC,MAAM,EAAC;AACzB,UAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AACtB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,YAAY,EAAE,CAAC;AACpD,QAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnB,QAAI,CAAC,YAAY,GAAG,EAAE,CAAC;;AAEvB,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE5B,QAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;CACvE;;AAED,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAS,eAAe,EAAC;AACrD,QAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACjD,SAAK,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACtC,SAAK,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;AACxC,QAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AACrC,QAAI,CAAC,SAAS,EAAG,CAAC;AAClB,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAE/B,WAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,UAAS,UAAU,EAAC;AAChD,QAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA,UAAS,cAAc,EAAC;AAC9C,YAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KACzD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEd,SAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;AAC5B,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;KAChC;CACJ,CAAC;;AAEF,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,UAAS,KAAK,EAAC;AACnD,QAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7C,QAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;CACpF,CAAC","file":"ActorManager.js","sourcesContent":["function ActorManager(config){\r\n    config = config || {};\r\n    this.core = null;\r\n    this.storage = {};\r\n    this.world = null;\r\n    this.factory = config.factory || new ActorFactory();\r\n    this.currentId = 1;\r\n    this.playerActors = [];\r\n\r\n    Object.assign(this, config);\r\n\r\n    if(!this.world) throw new Error('No world for Logic ActorManager!');\r\n}\r\n\r\nActorManager.prototype.addNew = function(actorParameters){\r\n    var actor = this.factory.create(actorParameters);\r\n    actor.body.storageId = this.currentId;\r\n    actor.body.classId = actorParameters[0];\r\n    this.storage[this.currentId] = actor;\r\n    this.currentId ++;\r\n    this.world.addBody(actor.body);\r\n\r\n    return actor;\r\n};\r\n\r\nActorManager.prototype.update = function(inputState){\r\n    this.playerActors.forEach(function(actorStorageId){\r\n        this.storage[actorStorageId].playerUpdate(inputState);\r\n    }.bind(this));\r\n\r\n    for (let actor in this.storage) {\r\n        this.storage[actor].update();\r\n    }\r\n};\r\n\r\nActorManager.prototype.setPlayerActor = function(actor){\r\n    this.playerActors.push(actor.body.storageId);\r\n    this.core.renderBus.postMessage('attachCamera', {actorId: actor.body.storageId});\r\n};\r\n"]}