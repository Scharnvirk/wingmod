{"version":3,"sources":["../../../../src/renderer/actorManagement/ActorManager.js"],"names":[],"mappings":";;AAAA,SAAS,YAAY,CAAC,MAAM,EAAC;AACzB,UAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AACtB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,YAAY,EAAE,CAAC;AACpD,QAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;;AAExC,QAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;;AAE1B,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE5B,QAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACrC,QAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,GAAC,CAAC,CAAC;;AAEpC,QAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;CAC1E;;AAED,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAU;AACtC,QAAI,KAAK,GAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAA,IAAK,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAA,AAAC,AAAC,CAAC;;AAExG,SAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;AAC5B,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;KAC1E;CACJ;;;;;;;;;AAAC,AASF,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,UAAU,EAAC;AACzD,QAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC/C,QAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACrC,QAAI,SAAS,GAAG,UAAU,CAAC,aAAa,CAAC;;AAEzC,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACtC,YAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC;AAC7B,gBAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9G,MAAM;AACH,gBAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1I;KACJ;CACJ,CAAC;;AAEF,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,SAAS,EAAC;AACpD,QAAI,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAChC,QAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;AAE3C,QAAG,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,KAAK,OAAO,EAAC;AACpE,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KAClC;;AAED,QAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AAC9B,SAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAChC,CAAC;;AAEF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,OAAO,EAAC;AACnD,QAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC;AACvB,YAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;KACxC,MAAM;AACH,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAClD;CAEJ,CAAC","file":"ActorManager.js","sourcesContent":["function ActorManager(config){\r\n    config = config || {};\r\n    this.storage = Object.create(null);\r\n    this.scene = null;\r\n    this.factory = config.factory || new ActorFactory();\r\n    this.framerate = config.framerate || 60;\r\n\r\n    this.DELTA_SMOOTHNESS = 0;\r\n\r\n    Object.assign(this, config);\r\n\r\n    this.currentPhysicsTime = Date.now();\r\n    this.lastPhysicsTime = Date.now()-1;\r\n\r\n    if(!this.scene) throw new Error('No scene for Renderer ActorManager!');\r\n}\r\n\r\nActorManager.prototype.update = function(){\r\n    var delta = ((Date.now() - this.currentPhysicsTime) / (this.currentPhysicsTime - this.lastPhysicsTime));\r\n\r\n    for (var actor in this.storage) {\r\n        this.storage[actor].update( isFinite(delta) ? Math.min(delta, 1) : 0 );\r\n    }\r\n};\r\n\r\n/*\r\ntransferArray[i*5] = body.storageId;\r\ntransferArray[i*5+1] = body.position[0];\r\ntransferArray[i*5+2] = body.position[1];\r\ntransferArray[i*5+3] = body.angle;\r\ntransferArray[i*5+4] = body.classId;\r\n*/\r\nActorManager.prototype.updateFromLogic = function(dataObject){\r\n    this.lastPhysicsTime = this.currentPhysicsTime;\r\n    this.currentPhysicsTime = Date.now();\r\n    var dataArray = dataObject.transferArray;\r\n\r\n    for(let i = 0; i < dataObject.length; i++){\r\n        if(!this.storage[dataArray[i*5]]){\r\n            this.createActor([dataArray[i*5], dataArray[i*5+1], dataArray[i*5+2], dataArray[i*5+3], dataArray[i*5+4]]);\r\n        } else {\r\n            this.storage[dataArray[i*5]].updateFromLogic([dataArray[i*5], dataArray[i*5+1], dataArray[i*5+2], dataArray[i*5+3], dataArray[i*5+4]]);\r\n        }\r\n    }\r\n};\r\n\r\nActorManager.prototype.createActor = function(actorData){\r\n    var actorId = actorData.shift();\r\n    var actor = this.factory.create(actorData);\r\n\r\n    if(this.actorRequestingCamera && this.actorRequestingCamera === actorId){\r\n        this.core.camera.actor = actor;\r\n    }\r\n\r\n    this.storage[actorId] = actor;\r\n    actor.addToScene(this.scene);\r\n};\r\n\r\nActorManager.prototype.attachCamera = function(actorId){\r\n    if (!this.storage[actorId]){\r\n        this.actorRequestingCamera = actorId;\r\n    } else {\r\n        this.core.camera.actor = this.storage[actorId];\r\n    }\r\n\r\n};\r\n"]}