{"version":3,"sources":["../../../../src/renderer/actorManagement/ActorManager.js"],"names":[],"mappings":";;AAAA,SAAS,YAAY,CAAC,MAAM,EAAC;AACzB,UAAM,GAAG,MAAM,IAAI,EAAE,CAAC;AACtB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,YAAY,EAAE,CAAC;;AAEpD,UAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE5B,QAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;CAC1E;;AAED,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,YAAU;AACtC,SAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;AAC5B,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;KAChC;CACJ;;;;;;;;;;AAAC,AAUF,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,UAAU,EAAC;;AAEzD,QAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC/B,QAAI,SAAS,GAAG,UAAU,CAAC,aAAa,CAAC;;AAGzC,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAC;AAC3B,YAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC;AAC7B,gBAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9G,MAAM;AACH,gBAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1I;KACJ;;;;;;;;;;;AAAA,CAWJ,CAAC;;AAEF,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,SAAS,EAAC;AACpD,QAAI,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAChC,QAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC3C,QAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AAC9B,SAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAChC,CAAC","file":"ActorManager.js","sourcesContent":["function ActorManager(config){\r\n    config = config || {};\r\n    this.storage = Object.create(null);\r\n    this.scene = null;\r\n    this.factory = config.factory || new ActorFactory();\r\n\r\n    Object.assign(this, config);\r\n\r\n    if(!this.scene) throw new Error('No scene for Renderer ActorManager!');\r\n}\r\n\r\nActorManager.prototype.update = function(){\r\n    for (var actor in this.storage) {\r\n        this.storage[actor].update();\r\n    }\r\n};\r\n\r\n/*\r\ntransferArray[i*5] = body.storageId;\r\ntransferArray[i*5+1] = body.position[0];\r\ntransferArray[i*5+2] = body.position[1];\r\ntransferArray[i*5+3] = body.angle;\r\ntransferArray[i*5+4] = body.classId;\r\n*/\r\n//format: [body.storageId, body.classId, body.position[0], body.position[1], body.angle]\r\nActorManager.prototype.updateFromLogic = function(dataObject){\r\n\r\n    var length = dataObject.length;\r\n    var dataArray = dataObject.transferArray;\r\n\r\n\r\n    for(let i = 0; i < length; i++){\r\n        if(!this.storage[dataArray[i*5]]){\r\n            this.createActor([dataArray[i*5], dataArray[i*5+1], dataArray[i*5+2], dataArray[i*5+3], dataArray[i*5+4]]);\r\n        } else {\r\n            this.storage[dataArray[i*5]].updateFromLogic([dataArray[i*5], dataArray[i*5+1], dataArray[i*5+2], dataArray[i*5+3], dataArray[i*5+4]]);\r\n        }\r\n    }\r\n\r\n    //\r\n    //\r\n    // dataArray.forEach((actorData) => {\r\n    //     if(!this.storage[actorData[0]]){\r\n    //         this.createActor(actorData);\r\n    //     } else {\r\n    //         this.storage[actorData[0]].updateFromLogic(actorData);\r\n    //     }\r\n    // });\r\n};\r\n\r\nActorManager.prototype.createActor = function(actorData){\r\n    var actorId = actorData.shift();\r\n    var actor = this.factory.create(actorData);\r\n    this.storage[actorId] = actor;\r\n    actor.addToScene(this.scene);\r\n};\r\n"]}