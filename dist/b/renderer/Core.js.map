{"version":3,"sources":["../../../src/renderer/Core.js"],"names":[],"mappings":"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","file":"Core.js","sourcesContent":["function Core(logicCore){\r\n    if(!logicCore) throw new Error('Logic core initialization failure!');\r\n    this.WIDTH = document.documentElement.clientWidth;\r\n    this.HEIGHT = document.documentElement.clientHeight;\r\n    this.FRAMERATE = 60;\r\n    this.renderTicks = 0;\r\n    this.logicWorker = logicCore;\r\n\r\n    this.initRenderer();\r\n    this.initAssets();\r\n}\r\n\r\n\r\nCore.prototype.initRenderer = function(){\r\n    this.renderer = this.makeRenderer();\r\n    this.controls = new TopDownControls( this.renderer.domElement );\r\n    this.camera = this.makeCamera();\r\n    this.scene = this.makeScene();\r\n    this.scene.add(this.camera);\r\n    this.autoResize(this.renderer, this.camera);\r\n    this.stats = new Stats();\r\n    this.stats.domElement.style.position = 'absolute';\r\n    this.stats.domElement.style.top = '0px';\r\n    this.actorManager = new ActorManager({scene: this.scene});\r\n    this.logicBus = new LogicBus({logicWorker: this.logicWorker, actorManager: this.actorManager});\r\n    this.gameScene = new GameScene({\r\n        core: this,\r\n        scene: this.scene,\r\n        logicBus: this.logicBus,\r\n        actorManager: this.actorManager\r\n    });\r\n\r\n    document.body.appendChild( this.renderer.domElement );\r\n    document.body.appendChild( this.stats.domElement );\r\n};\r\n\r\nCore.prototype.makeCamera = function() {\r\n    console.log('making camera');\r\n    var camera = new Camera({controls: this.controls});\r\n    return camera;\r\n};\r\n\r\nCore.prototype.makeScene = function(camera) {\r\n    return new THREE.Scene();\r\n};\r\n\r\nCore.prototype.makeRenderer = function() {\r\n    var renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(this.WIDTH, this.HEIGHT);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.BasicShadowMap;\r\n    return renderer;\r\n};\r\n\r\nCore.prototype.autoResize = function(renderer, camera) {\r\n    var callback = function () {\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n    };\r\n    window.addEventListener('resize', callback, false);\r\n    return {\r\n        stop: function () {\r\n            window.removeEventListener('resize', callback);\r\n        }\r\n    };\r\n};\r\n\r\n\r\nCore.prototype.initAssets = function() {\r\n    this.modelLoader = new ModelLoader(ModelList.models);\r\n    this.modelLoader.addEventListener('loaded', this.onLoaded.bind(this));\r\n    this.modelLoader.loadModels();\r\n};\r\n\r\nCore.prototype.onLoaded = function(event) {\r\n    ModelStore.loadBatch(this.modelLoader.getBatch());\r\n    this.modelLoader.clearBatch();\r\n    this.continueInit();\r\n};\r\n\r\nCore.prototype.continueInit = function(){\r\n    this.gameScene.make();\r\n\r\n    setInterval(()=>{\r\n        console.log('renderTicks: ', this.renderTicks);\r\n        this.renderTicks = 0;\r\n    }, 1000);\r\n\r\n    var renderLoop = new THREEx.RenderingLoop();\r\n    renderLoop.add(this.render.bind(this));\r\n    renderLoop.start();\r\n};\r\n\r\nCore.prototype.render = function(){\r\n    this.gameScene.update();\r\n    this.actorManager.update();\r\n    this.controls.update();\r\n    this.camera.update();\r\n    this.renderTicks++;\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.stats.update();\r\n};\r\n\r\n/*\r\ninterpolacja do ogarniecia!!!\r\nWorld.prototype.step = function(dt,timeSinceLastCalled,maxSubSteps){\r\n    maxSubSteps = maxSubSteps || 10;\r\n    timeSinceLastCalled = timeSinceLastCalled || 0;\r\n\r\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\r\n\r\n        this.internalStep(dt);\r\n\r\n        // Increment time\r\n        this.time += dt;\r\n\r\n    } else {\r\n\r\n        this.accumulator += timeSinceLastCalled;\r\n        var substeps = 0;\r\n        while (this.accumulator >= dt && substeps < maxSubSteps) {\r\n            // Do fixed steps to catch up\r\n            this.internalStep(dt);\r\n            this.time += dt;\r\n            this.accumulator -= dt;\r\n            substeps++;\r\n        }\r\n\r\n        var t = (this.accumulator % dt) / dt;\r\n        for(var j=0; j!==this.bodies.length; j++){\r\n            var b = this.bodies[j];\r\n            vec2.lerp(b.interpolatedPosition, b.previousPosition, b.position, t);\r\n            b.interpolatedAngle = b.previousAngle + t * (b.angle - b.previousAngle);\r\n        }\r\n    }\r\n};\r\n*/\r\n"]}