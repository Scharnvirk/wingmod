{"version":3,"sources":["../../../src/objectPool/BaseObjectPool.js"],"names":[],"mappings":";;;;;;IAAM,cAAc;AAChB,aADE,cAAc,CACJ,QAAQ,EAAC;8BADnB,cAAc;;AAEZ,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,YAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;AAC/B,YAAI,CAAC,SAAS,EAAE,CAAC;KACpB;;iBANC,cAAc;;+BAQT,eAAe,EAAC;AACnB,gBAAI,kBAAkB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAChD,gBAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;AACrC,kBAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;AACnD,gBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC1C,mBAAO,kBAAkB,CAAC;SAC7B;;;gCAEO,MAAM,EAAC;AACX,gBAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;AACjD,gBAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACzB,mBAAO,MAAM,CAAC;SACjB;;;6CAEmB;AAChB,mBAAO;AACH,qBAAK,EAAE,iBAAU;AACb,2BAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;iBACpE;aACJ,CAAC;SACL;;;oCAEW,MAAM,EAAC;AACf,gBAAI,CAAC,MAAM,CAAC,KAAK,EAAC;AACd,sBAAM,2CAA2C,GAAG,MAAM,CAAE;aAC/D,MAAM;AACH,sBAAM,CAAC,KAAK,EAAE,CAAC;aAClB;SACJ;;;gCAEO,EAAE,EAAC;AACP,gBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC7B;;;sCAEY;AACT,gBAAI,MAAM,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACvC,gBAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACzB,mBAAO,MAAM,CAAC;SACjB;;;oCAEU;AACP,iBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAC;AAClC,oBAAI,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAChC,oBAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC/B;SACJ;;;yCAEe;AACZ,gBAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;AAChF,mBAAO,cAAc,CAAC,GAAG,EAAE,CAAC;SAC/B;;;8CAEqB,MAAM,EAAC;AACzB,gBAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE1C,gBAAI,KAAK,IAAI,CAAC,EAAC;AACX,oBAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;AAC9B,oBAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,uBAAO,IAAI,CAAC;aACf;AACD,mBAAO,KAAK,CAAC;SAChB;;;WArEC,cAAc","file":"BaseObjectPool.js","sourcesContent":["class BaseObjectPool{\n    constructor(poolSize){\n        this.usedPool = [];\n        this.emptyPool = [];\n        this.poolSize = poolSize || 10;\n        this._initPool();\n    }\n\n    create(newObjectParams){\n        var newlyCreatedObject = this._fetchNextEmpty();\n        this.resetObject(newlyCreatedObject);\n        Object.assign(newlyCreatedObject, newObjectParams);\n        this.usedPool.unshift(newlyCreatedObject);\n        return newlyCreatedObject;\n    }\n\n    destroy(object){\n        var result = this._moveObjectToEmptyPool(object);\n        this.resetObject(object);\n        return result;\n    }\n\n    constructNewObject(){\n        return {\n            reset: function(){\n                console.warn(\"Default object reset function is not implemented\");\n            }\n        };\n    }\n\n    resetObject(object){\n        if (!object.reset){\n            throw(\"No reset function implemented for object \" + object);\n        } else {\n            object.reset();\n        }\n    }\n\n    iterate(fn){\n        this.usedPool.forEach(fn);\n    }\n\n    _initObject(){\n        var object = this.constructNewObject();\n        this.resetObject(object);\n        return object;\n    }\n\n    _initPool(){\n        for(var i = 0; i < this.poolSize; i++){\n            var object = this._initObject();\n            this.emptyPool.push(object);\n        }\n    }\n\n    fetchNextEmpty(){\n        var poolToTakeFrom = this.emptyPool.length > 0 ? this.emptyPool : this.usedPool;\n        return poolToTakeFrom.pop();\n    }\n\n    moveObjectToEmptyPool(object){\n        var index = this.usedPool.indexOf(object);\n\n        if (index >= 0){\n            this.usedPool.splice(index,1);\n            this.emptyPool.push(object);\n            return true;\n        }\n        return false;\n    }\n}\n"]}