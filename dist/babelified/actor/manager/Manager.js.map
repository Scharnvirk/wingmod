{"version":3,"sources":["../../../../src/actor/manager/Manager.js"],"names":[],"mappings":"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","file":"Manager.js","sourcesContent":["class Manager {\n    constructor(scene, collisionClass){\n        this._scene = scene;\n        this._objectPool = [];\n        this.collisionClass = collisionClass;\n        this.collisionMap = {};\n\n        this.GRID_BOX_SIDE_LENGTH = 10;\n        this.BOXES_PER_GRID_EDGE = 1000;\n\n        this.BOXES_PER_GRID_EDGE = Math.floor(this.BOXES_PER_GRID_EDGE);\n        this.HALF_EDGE = this.BOXES_PER_GRID_EDGE / 2;\n    }\n\n    update() {\n        if(this.collisionClass){\n            this._objectPool.forEach((object) => {\n                this.collisionGridUpdate(this.collisionMap, object);\n            });\n        }\n\n        this._objectPool.forEach((object) => {\n            object.update();\n        });\n    }\n\n    add(actor){\n        this._objectPool.push(actor);\n        actor.addToScene(this._scene);\n    }\n\n    getActiveActors(){\n        return this._objectPool;\n    }\n\n    //\n    // collisionBruteForce(a){\n    //     this._objectPool.forEach((b) => {\n    //         if(\n    //             a.position.x + a.diameter > b.position.x - b.diameter ||\n    //             a.position.x - a.diameter < b.position.x + b.diameter ||\n    //             a.position.y + a.diameter > b.position.y - b.diameter ||\n    //             a.position.y - a.diameter < b.position.y + b.diameter\n    //         ){\n    //             var x = 'asd';\n    //         }\n    //     });\n    // }\n\n    makeActorPositionIndices(actor){\n        var indices = [];\n\n        var xPlusPart = Math.floor((actor.position.x + actor.diameter) / this.GRID_BOX_SIDE_LENGTH) + 1 + this.HALF_EDGE;\n        var xMinusPart = Math.floor((actor.position.x - actor.diameter) / this.GRID_BOX_SIDE_LENGTH) + 1 + this.HALF_EDGE;\n        var yPlusPart = (Math.floor((actor.position.y + actor.diameter) / this.GRID_BOX_SIDE_LENGTH) + 1 + this.HALF_EDGE) * this.BOXES_PER_GRID_EDGE;\n        var yMinusPart = (Math.floor((actor.position.y - actor.diameter) / this.GRID_BOX_SIDE_LENGTH) + 1 + this.HALF_EDGE) * this.BOXES_PER_GRID_EDGE;\n\n        indices.push(xMinusPart + yMinusPart);\n        indices.push(xMinusPart + yPlusPart);\n        indices.push(xPlusPart + yMinusPart);\n        indices.push(xPlusPart + yPlusPart);\n\n        return indices;\n    }\n\n    addToCollisionGrid(collisionMap, indices, actor){\n        var actorListAtCollisionMap;\n        for(var j = 0; j<4; j++){\n            actorListAtCollisionMap = collisionMap[indices[j]];\n            if( actorListAtCollisionMap ){\n                if(actorListAtCollisionMap.indexOf(actor) < 0 ){\n                     actorListAtCollisionMap.push(actor);\n                     actor.collisionCells.push(indices[j]);\n                }\n            } else {\n                 collisionMap[indices[j]] = [actor];\n                 actor.collisionCells.push(indices[j]);\n            }\n        }\n    }\n\n    cleanCollisionGrid(collisionMap, indices, actor){\n        for(var i = 0; i < actor.collisionCells.length; i++){\n            if(indices.indexOf(actor.collisionCells[i]) < 0){\n                collisionMap[actor.collisionCells[i]].splice(collisionMap[actor.collisionCells[i]].indexOf(actor), 1 );\n                if(collisionMap[actor.collisionCells[i]].length === 0){\n                    delete collisionMap[actor.collisionCells[i]];\n                }\n                actor.collisionCells.splice(i,1);\n            }\n        }\n    }\n\n    collisionGridUpdate(collisionMap, actor){\n        var indices = this.makeActorPositionIndices(actor);\n        this.addToCollisionGrid(collisionMap, indices, actor);\n        this.cleanCollisionGrid(collisionMap, indices, actor);\n    }\n}\n"]}