{"version":3,"sources":["../../../../src/actor/manager/MapLightManager.js"],"names":[],"mappings":";;;;;;;;;;;;IAAM,eAAe;cAAf,eAAe;;AACjB,aADE,eAAe,CACL,KAAK,EAAE,MAAM,EAAC;8BADxB,eAAe;;2EAAf,eAAe,aAEP,KAAK;;AACX,cAAK,OAAO,GAAG,MAAM,CAAC;AACtB,cAAK,cAAc,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;AAC1C,cAAK,kBAAkB,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;;KAChD;;iBANC,eAAe;;8CAQK;AAClB,gBAAI,CAAC,cAAc,CAAC,aAAa,CAAE,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAE,CAAE,CAAC;SAC/I;;;iCAEQ;;;AACL,uCAbF,eAAe,wCAaE;AACf,gBAAI,CAAC,mBAAmB,EAAE,CAAC;AAC3B,gBAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,UAAU,EAAK;AACrC,uBAAK,kBAAkB,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrD,uBAAK,kBAAkB,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrD,oBAAI,uBAAuB,GAAG,UAAU,CAAC,OAAO,CAAC;AACjD,0BAAU,CAAC,OAAO,GAAG,OAAK,cAAc,CAAC,gBAAgB,CAAC,OAAK,kBAAkB,CAAC,CAAC;;AAEnF,oBAAI,uBAAuB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAC;AAChD,8BAAU,CAAC,UAAU,CAAC,KAAK,CAAC;;AAAC,iBAE/B;;AAED,oBAAI,CAAC,uBAAuB,IAAI,UAAU,CAAC,OAAO,EAAC;AAChD,8BAAU,CAAC,UAAU,CAAC,IAAI,CAAC;;AAAC,iBAE9B;aACJ,CAAC,CAAC;SACN;;;WA/BC,eAAe;GAAS,OAAO","file":"MapLightManager.js","sourcesContent":["class MapLightManager extends Manager{\n    constructor(scene, camera){\n        super(scene);\n        this._camera = camera;\n        this._cameraFrustum = new THREE.Frustum();\n        this._frustumTestSphere = new THREE.Sphere();\n    }\n\n    updateCameraFrustum() {\n        this._cameraFrustum.setFromMatrix( new THREE.Matrix4().multiplyMatrices( this._camera.projectionMatrix, this._camera.matrixWorldInverse ) );\n    }\n\n    update() {\n        super.update();\n        this.updateCameraFrustum();\n        this._objectPool.forEach((lightActor) => {\n            this._frustumTestSphere.center = lightActor.position;\n            this._frustumTestSphere.radius = lightActor.diameter;\n            var lightActorVisibleBefore = lightActor.visible;\n            lightActor.visible = this._cameraFrustum.intersectsSphere(this._frustumTestSphere);\n\n            if (lightActorVisibleBefore && !lightActor.visible){\n               lightActor.setVisible(false);\n               //console.log(\"removing light from scene (at \"+lightActor.position.x+\",\"+lightActor.position.y);\n            }\n\n            if (!lightActorVisibleBefore && lightActor.visible){\n               lightActor.setVisible(true);\n               //console.log(\"adding light to scene (at \"+lightActor.position.x+\",\"+lightActor.position.y);\n            }\n        });\n    }\n}\n"]}