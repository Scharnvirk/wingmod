{"version":3,"sources":["../../../src/actor/MookActor.js"],"names":[],"mappings":";;;;;;;;;;IAAM,SAAS;cAAT,SAAS;;AACX,aADE,SAAS,CACC,MAAM,EAAC;8BADjB,SAAS;;2EAAT,SAAS,aAED,MAAM;;AACZ,cAAM,CAAC,MAAM,QAAO,MAAM,CAAC,CAAC;;AAE5B,cAAK,IAAI,GAAG,MAAK,UAAU,EAAE,CAAC;AAC9B,cAAK,IAAI,GAAG,MAAK,UAAU,EAAE,CAAC;;AAE9B,cAAK,YAAY,GAAG,EAAE,CAAC;AACvB,cAAK,SAAS,GAAG,GAAG,CAAC;;AAErB,cAAK,MAAM,GAAG,CAAC,CAAC;AAChB,cAAK,aAAa,GAAG,CAAC,CAAC;;KAC1B;;iBAbC,SAAS;;uCAeG;AACV,gBAAI,CAAC,UAAU,EAAE,CAAC;AAClB,gBAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;AACjB,oBAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aACnE;;AAED,gBAAG,IAAI,CAAC,aAAa,KAAK,CAAC,EAAC;AACxB,oBAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;aACnE,MAAM;AACH,oBAAI,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;aACjC;SACJ;;;qCAEW;AACR,mBAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;SACrE;;;qCAEW;AACR,mBAAO,IAAI,QAAQ,CAAC;AAChB,qBAAK,EAAE,IAAI;AACX,oBAAI,EAAE,CAAC;AACP,uBAAO,EAAE,IAAI;AACb,8BAAc,EAAE,IAAI;AACpB,wBAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC,CAAC;SACN;;;qCAEW;AACR,gBAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACpE,gBAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,GAAG,EAAE,EAAC;AACtB,oBAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;AACnC,oBAAI,UAAU,GAAG,EAAE,EAAC;AAChB,wBAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBACnB,MAAM,IAAI,UAAU,IAAI,CAAC,EAAE;AACxB,wBAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBACpB,MAAM;AACH,wBAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBACnB;aACJ;SACJ;;;WAtDC,SAAS;GAAS,SAAS","file":"MookActor.js","sourcesContent":["class MookActor extends BaseActor{\n    constructor(config){\n        super(config);\n        Object.assign(this, config);\n\n        this.mesh = this.createMesh();\n        this.body = this.createBody();\n\n        this.acceleration = 40;\n        this.turnSpeed = 0.3;\n\n        this.thrust = 0;\n        this.rotationForce = 0;\n    }\n\n    customUpdate(){\n        this.actorLogic();\n        if(this.thrust !== 0){\n            this.body.applyForceLocal([0, this.thrust * this.acceleration]);\n        }\n\n        if(this.rotationForce !== 0){\n            this.body.angularVelocity = this.rotationForce * this.turnSpeed;\n        } else {\n            this.body.angularVelocity = 0;\n        }\n    }\n\n    createMesh(){\n        return new ShipMesh(this, this.diameter, Utils.makeRandomColor());\n    }\n\n    createBody(){\n        return new BaseBody({\n            actor: this,\n            mass: 1,\n            damping: 0.75,\n            angularDamping: 0.01,\n            position: this.position\n        });\n    }\n\n    actorLogic(){\n        if(Utils.rand(0,100) === 100) this.rotationForce = Utils.rand(-2,2);\n        if(Utils.rand(0,100) > 97){\n            var thrustRand = Utils.rand(0,100);\n            if (thrustRand > 20){\n                this.thrust = 1;\n            } else if (thrustRand <= 2) {\n                this.thrust = -1;\n            } else {\n                this.thrust = 0;\n            }\n        }\n    }\n}\n"]}