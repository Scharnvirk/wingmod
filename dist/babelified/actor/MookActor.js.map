{"version":3,"sources":["../../../src/actor/MookActor.js"],"names":[],"mappings":";;;;;;;;;;IAAM,SAAS;cAAT,SAAS;;AACX,aADE,SAAS,CACC,QAAQ,EAAC;8BADnB,SAAS;;2EAAT,SAAS,aAED,QAAQ,EAAE,CAAC;;AACjB,cAAK,IAAI,GAAG,MAAK,UAAU,EAAE,CAAC;;AAE9B,cAAK,iBAAiB,GAAG;AACrB,oBAAQ,EAAE,IAAI;AACd,wBAAY,EAAE,IAAI;AAClB,wBAAY,EAAE,IAAI;SACrB,CAAC;;AAEF,cAAK,OAAO,GAAG,MAAK,aAAa,EAAE,CAAC;;AAEpC,cAAK,QAAQ,GAAG,CAAC,CAAC;AAClB,cAAK,OAAO,GAAG,CAAC,CAAC;AACjB,cAAK,aAAa,GAAG,CAAC,CAAC;;KAC1B;;iBAhBC,SAAS;;uCAkBG;AACV,gBAAI,CAAC,UAAU,EAAE,CAAC;SACrB;;;qCAEW;AACR,mBAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;SACrE;;;wCAEc;AACX,mBAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;SAChC;;;qCAEW;AACR,oBAAO,IAAI,CAAC,OAAO;AACf,qBAAK,CAAC,CAAC;AAAE,wBAAI,CAAC,KAAK,EAAG,CAAC,AAAC,MAAM;AAAA,AAC9B,qBAAK,CAAC,CAAC;AAAE,wBAAI,CAAC,KAAK,IAAI,CAAC,CAAC,AAAC,MAAM;AAAA,AAChC,qBAAK,CAAC;AAAE,wBAAI,CAAC,KAAK,EAAG,CAAC,AAAC,MAAM;AAAA,AAC7B,qBAAK,CAAC;AAAE,wBAAI,CAAC,KAAK,IAAI,CAAC,CAAC,AAAC,MAAM;AAAA,aAClC;;AAED,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;;AAEjC,gBAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AAC9D,gBAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,GAAG,EAAE,EAAC;AACtB,oBAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;AACnC,oBAAI,UAAU,GAAG,EAAE,EAAC;AAChB,wBAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC1B,MAAM,IAAI,UAAU,IAAI,CAAC,EAAE;AACxB,wBAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;iBAC3B,MAAM;AACH,wBAAI,CAAC,aAAa,GAAG,CAAC,CAAC;iBAC1B;aACJ;SACJ;;;WAnDC,SAAS;GAAS,SAAS","file":"MookActor.js","sourcesContent":["class MookActor extends BaseActor{\n    constructor(position){\n        super(position, 0);\n        this.mesh = this.createMesh();\n\n        this.physicsProperties = {\n            friction: 0.01,\n            acceleration: 0.05,\n            deceleration: 0.04\n        };\n\n        this.physics = this.createPhysics();\n\n        this.diameter = 2;\n        this.turning = 0;\n        this.thrustSetting = 0;\n    }\n\n    customUpdate(){\n        this.actorLogic();\n    }\n\n    createMesh(){\n        return new ShipMesh(this, this.diameter, Utils.makeRandomColor());\n    }\n\n    createPhysics(){\n        return new BasePhysics(this);\n    }\n\n    actorLogic(){\n        switch(this.turning){\n            case -1: this.angle --; break;\n            case -2: this.angle -= 3; break;\n            case 1: this.angle ++; break;\n            case 2: this.angle += 3; break;\n        }\n\n        this.thrust = this.thrustSetting;\n\n        if(Utils.rand(0,100) === 100) this.turning = Utils.rand(-2,2);\n        if(Utils.rand(0,100) > 97){\n            var thrustRand = Utils.rand(0,100);\n            if (thrustRand > 20){\n                this.thrustSetting = 1;\n            } else if (thrustRand <= 2) {\n                this.thrustSetting = -1;\n            } else {\n                this.thrustSetting = 0;\n            }\n        }\n    }\n}\n"]}