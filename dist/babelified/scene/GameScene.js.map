{"version":3,"sources":["../../../src/scene/GameScene.js"],"names":[],"mappings":"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","file":"GameScene.js","sourcesContent":["class GameScene {\n    constructor(core, scene) {\n        this.core = core;\n        this.scene = scene;\n        //this.lightManager = new MapLightManager(this.scene, this.core.camera);\n        this.lightCounter = 0;\n\n        var radius = 5;\n        var segments = 16;\n        var rings = 16;\n\n        this.sphereGeometry =  new THREE.SphereGeometry( 1, 32, 16, 0, Math.PI );\n    }\n\n    makeSphere (sphereMaterial, _radius) {\n        return new THREE.Mesh(this.sphereGeometry, sphereMaterial );\n    }\n\n    makeWalls () {\n        var walls = [];\n        var wall;\n\n        var material = new THREE.MeshLambertMaterial({\n            color: 0xffffff\n        });\n\n        var wallGeometry = new THREE.BoxGeometry(10,100,5,20,20);\n\n        for(var i = 0; i < 100; i++){\n            wall = new THREE.Mesh(wallGeometry,material);\n            wall.position.x = Utils.rand(-300,300);\n            wall.position.y = Utils.rand(-300,300);\n            wall.position.z = 0;\n            wall.rotateZ(Utils.degToRad(Utils.rand(0,360)));\n            walls.push(wall);\n        }\n\n        var combine = new THREE.Geometry();\n\n        walls.forEach((w) => {\n            w.updateMatrix();\n            combine.merge(w.geometry, w.matrix);\n        });\n\n        return new THREE.Mesh(combine, material);\n    }\n\n    make() {\n        for (var j  = 0; j < 5; j++){\n            var light = new MapLightActor();\n            light.position.x = Math.random()*1000-500;\n            light.position.y = Math.random()*1000-500;\n            this.core.masterManager.get('light').add(light);\n        }\n\n\n        for (var i = 0; i < 2000; i++){\n            var mook = new MookActor(new THREE.Vector2(Utils.rand(-100,100), Utils.rand(-100,100)));\n            mook.angle = Utils.rand(0,360);\n            this.core.masterManager.get('ship').add(mook);\n        }\n\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(0,0)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(0,5)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(0,10)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(5,0)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(5,5)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(5,10)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(10,0)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(10,5)));\n        // this.core.masterManager.get('ship').add(new MookActor(new THREE.Vector2(10,10)));\n\n        var combine = new THREE.Geometry();\n        var geometry = new THREE.PlaneGeometry( 1000, 1000, 200,200 );\n        var material = new THREE.MeshLambertMaterial( { color: 0xffffff } );\n        var floor = new THREE.Mesh( geometry, material );\n\n       floor.updateMatrix();\n       combine.merge(floor.geometry, floor.matrix);\n\n       var walls = this.makeWalls();\n       combine.merge(walls.geometry, walls.matrix);\n       var combinedObject = new THREE.Mesh(combine, material);\n       combinedObject.matrixAutoUpdate = false;\n       combinedObject.updateMatrix();\n      this.scene.add(combinedObject);\n\n        var testLight = new THREE.PointLight( 0x550000, 1, 100 );\n        testLight.position.set( 50, 50, 50 );\n        this.scene.add( testLight );\n\n        console.log(testLight);\n    }\n\n    update(delta){\n    }\n}\n"]}